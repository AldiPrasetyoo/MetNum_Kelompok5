# -*- coding: utf-8 -*-
"""Integral.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1x9-5s32qe9OYcuc9Cald91PA2NIlu9UR
"""

def fungsi_integral(x):

   #Fungsi yang di integralkan.
    return x**2 + 3*x + 2

def metode_trapesium(f, batas_bawah, batas_atas, jumlah_subinterval):

  #metode trapesium.

    h = (batas_atas - batas_bawah) / jumlah_subinterval
    integral_sum = f(batas_bawah) + f(batas_atas)

    for i in range(1, jumlah_subinterval):
        integral_sum += 2 * f(batas_bawah + i * h)

    return (h / 2) * integral_sum

def ambil_input():

    #inputan batas bawah, batas atas, dan jumlah subinterval.

    batas_bawah = float(input("Nilai batas bawah a: "))
    batas_atas = float(input("Nnilai batas atas b: "))
    jumlah_subinterval = int(input("Jumlah subinterval n: "))

    return batas_bawah, batas_atas, jumlah_subinterval

while True:
    try:
        batas_bawah, batas_atas, jumlah_subinterval = ambil_input()

        # Menggunakan metode trapesium
        integral_approx = metode_trapesium(fungsi_integral, batas_bawah, batas_atas, jumlah_subinterval)

        print(f"\nPerkiraan integral dari fungsi antara {batas_bawah} dan {batas_atas} dengan n = {jumlah_subinterval} adalah {integral_approx:.4f}")

        # Opsi untuk keluar dari program
        choice = input("\nIngin menghitung integral lagi? (yes/no): ").lower()
        if choice != 'yes':
            print("Program telah dihentikan.")
            break

    except ValueError as ve:
        print(f"Terjadi kesalahan: {ve}. Masukkan harus berupa angka. Silakan coba lagi.")
    except Exception as e:
        print(f"Terjadi kesalahan: {e}. Silakan coba lagi.")